{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyMFLZtAA8itOEK34P9xWG3N"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import plotly.express as px\n","import plotly.graph_objects as go\n","import os\n",""],"metadata":{"id":"LTYuT4qYQOOj","executionInfo":{"status":"ok","timestamp":1719921274544,"user_tz":-330,"elapsed":1173,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# Load the dataset\n","url = \"https://raw.githubusercontent.com/kuchbhi-kunal/nidan/main/diabetes_binary_5050split_health_indicators_BRFSS2015.csv\"\n","df = pd.read_csv(url)\n"],"metadata":{"id":"-u64dLvPS_Ip","executionInfo":{"status":"ok","timestamp":1719921288619,"user_tz":-330,"elapsed":486,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"id":"OaisE-pDTC--","executionInfo":{"status":"ok","timestamp":1719921304226,"user_tz":-330,"elapsed":491,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"0f27386f-6f19-4673-8a02-1ea0b7d61b4c"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Diabetes_binary  HighBP  HighChol  CholCheck   BMI  Smoker  Stroke  \\\n","0              0.0     1.0       0.0        1.0  26.0     0.0     0.0   \n","1              0.0     1.0       1.0        1.0  26.0     1.0     1.0   \n","2              0.0     0.0       0.0        1.0  26.0     0.0     0.0   \n","3              0.0     1.0       1.0        1.0  28.0     1.0     0.0   \n","4              0.0     0.0       0.0        1.0  29.0     1.0     0.0   \n","\n","   HeartDiseaseorAttack  PhysActivity  Fruits  ...  AnyHealthcare  \\\n","0                   0.0           1.0     0.0  ...            1.0   \n","1                   0.0           0.0     1.0  ...            1.0   \n","2                   0.0           1.0     1.0  ...            1.0   \n","3                   0.0           1.0     1.0  ...            1.0   \n","4                   0.0           1.0     1.0  ...            1.0   \n","\n","   NoDocbcCost  GenHlth  MentHlth  PhysHlth  DiffWalk  Sex   Age  Education  \\\n","0          0.0      3.0       5.0      30.0       0.0  1.0   4.0        6.0   \n","1          0.0      3.0       0.0       0.0       0.0  1.0  12.0        6.0   \n","2          0.0      1.0       0.0      10.0       0.0  1.0  13.0        6.0   \n","3          0.0      3.0       0.0       3.0       0.0  1.0  11.0        6.0   \n","4          0.0      2.0       0.0       0.0       0.0  0.0   8.0        5.0   \n","\n","   Income  \n","0     8.0  \n","1     8.0  \n","2     8.0  \n","3     8.0  \n","4     8.0  \n","\n","[5 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-2f03b8aa-c992-4579-9cc8-ccefbcb665fb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Diabetes_binary</th>\n","      <th>HighBP</th>\n","      <th>HighChol</th>\n","      <th>CholCheck</th>\n","      <th>BMI</th>\n","      <th>Smoker</th>\n","      <th>Stroke</th>\n","      <th>HeartDiseaseorAttack</th>\n","      <th>PhysActivity</th>\n","      <th>Fruits</th>\n","      <th>...</th>\n","      <th>AnyHealthcare</th>\n","      <th>NoDocbcCost</th>\n","      <th>GenHlth</th>\n","      <th>MentHlth</th>\n","      <th>PhysHlth</th>\n","      <th>DiffWalk</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Education</th>\n","      <th>Income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>26.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>26.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>12.0</td>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>26.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>13.0</td>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>28.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>11.0</td>\n","      <td>6.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>29.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f03b8aa-c992-4579-9cc8-ccefbcb665fb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2f03b8aa-c992-4579-9cc8-ccefbcb665fb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2f03b8aa-c992-4579-9cc8-ccefbcb665fb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-febae827-e97b-47a2-aeff-7f0edc1b43b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-febae827-e97b-47a2-aeff-7f0edc1b43b9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-febae827-e97b-47a2-aeff-7f0edc1b43b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1sOOw8QlTGme","executionInfo":{"status":"ok","timestamp":1719921317497,"user_tz":-330,"elapsed":482,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"f0ddc896-c896-4190-be63-c8f8fe6baf9e"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 70692 entries, 0 to 70691\n","Data columns (total 22 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   Diabetes_binary       70692 non-null  float64\n"," 1   HighBP                70692 non-null  float64\n"," 2   HighChol              70692 non-null  float64\n"," 3   CholCheck             70692 non-null  float64\n"," 4   BMI                   70692 non-null  float64\n"," 5   Smoker                70692 non-null  float64\n"," 6   Stroke                70692 non-null  float64\n"," 7   HeartDiseaseorAttack  70692 non-null  float64\n"," 8   PhysActivity          70692 non-null  float64\n"," 9   Fruits                70692 non-null  float64\n"," 10  Veggies               70692 non-null  float64\n"," 11  HvyAlcoholConsump     70692 non-null  float64\n"," 12  AnyHealthcare         70692 non-null  float64\n"," 13  NoDocbcCost           70692 non-null  float64\n"," 14  GenHlth               70692 non-null  float64\n"," 15  MentHlth              70692 non-null  float64\n"," 16  PhysHlth              70692 non-null  float64\n"," 17  DiffWalk              70692 non-null  float64\n"," 18  Sex                   70692 non-null  float64\n"," 19  Age                   70692 non-null  float64\n"," 20  Education             70692 non-null  float64\n"," 21  Income                70692 non-null  float64\n","dtypes: float64(22)\n","memory usage: 11.9 MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349},"id":"IuD-gPbPTJ_6","executionInfo":{"status":"ok","timestamp":1719921331026,"user_tz":-330,"elapsed":530,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"4a0e6995-f893-44ba-faaf-aca1475eba0b"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Diabetes_binary        HighBP      HighChol     CholCheck  \\\n","count     70692.000000  70692.000000  70692.000000  70692.000000   \n","mean          0.500000      0.563458      0.525703      0.975259   \n","std           0.500004      0.495960      0.499342      0.155336   \n","min           0.000000      0.000000      0.000000      0.000000   \n","25%           0.000000      0.000000      0.000000      1.000000   \n","50%           0.500000      1.000000      1.000000      1.000000   \n","75%           1.000000      1.000000      1.000000      1.000000   \n","max           1.000000      1.000000      1.000000      1.000000   \n","\n","                BMI        Smoker        Stroke  HeartDiseaseorAttack  \\\n","count  70692.000000  70692.000000  70692.000000          70692.000000   \n","mean      29.856985      0.475273      0.062171              0.147810   \n","std        7.113954      0.499392      0.241468              0.354914   \n","min       12.000000      0.000000      0.000000              0.000000   \n","25%       25.000000      0.000000      0.000000              0.000000   \n","50%       29.000000      0.000000      0.000000              0.000000   \n","75%       33.000000      1.000000      0.000000              0.000000   \n","max       98.000000      1.000000      1.000000              1.000000   \n","\n","       PhysActivity        Fruits  ...  AnyHealthcare   NoDocbcCost  \\\n","count  70692.000000  70692.000000  ...   70692.000000  70692.000000   \n","mean       0.703036      0.611795  ...       0.954960      0.093914   \n","std        0.456924      0.487345  ...       0.207394      0.291712   \n","min        0.000000      0.000000  ...       0.000000      0.000000   \n","25%        0.000000      0.000000  ...       1.000000      0.000000   \n","50%        1.000000      1.000000  ...       1.000000      0.000000   \n","75%        1.000000      1.000000  ...       1.000000      0.000000   \n","max        1.000000      1.000000  ...       1.000000      1.000000   \n","\n","            GenHlth      MentHlth      PhysHlth      DiffWalk           Sex  \\\n","count  70692.000000  70692.000000  70692.000000  70692.000000  70692.000000   \n","mean       2.837082      3.752037      5.810417      0.252730      0.456997   \n","std        1.113565      8.155627     10.062261      0.434581      0.498151   \n","min        1.000000      0.000000      0.000000      0.000000      0.000000   \n","25%        2.000000      0.000000      0.000000      0.000000      0.000000   \n","50%        3.000000      0.000000      0.000000      0.000000      0.000000   \n","75%        4.000000      2.000000      6.000000      1.000000      1.000000   \n","max        5.000000     30.000000     30.000000      1.000000      1.000000   \n","\n","                Age     Education        Income  \n","count  70692.000000  70692.000000  70692.000000  \n","mean       8.584055      4.920953      5.698311  \n","std        2.852153      1.029081      2.175196  \n","min        1.000000      1.000000      1.000000  \n","25%        7.000000      4.000000      4.000000  \n","50%        9.000000      5.000000      6.000000  \n","75%       11.000000      6.000000      8.000000  \n","max       13.000000      6.000000      8.000000  \n","\n","[8 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-1a4244e3-b86e-437c-ac2d-dabd22d000d6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Diabetes_binary</th>\n","      <th>HighBP</th>\n","      <th>HighChol</th>\n","      <th>CholCheck</th>\n","      <th>BMI</th>\n","      <th>Smoker</th>\n","      <th>Stroke</th>\n","      <th>HeartDiseaseorAttack</th>\n","      <th>PhysActivity</th>\n","      <th>Fruits</th>\n","      <th>...</th>\n","      <th>AnyHealthcare</th>\n","      <th>NoDocbcCost</th>\n","      <th>GenHlth</th>\n","      <th>MentHlth</th>\n","      <th>PhysHlth</th>\n","      <th>DiffWalk</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Education</th>\n","      <th>Income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>...</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","      <td>70692.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.500000</td>\n","      <td>0.563458</td>\n","      <td>0.525703</td>\n","      <td>0.975259</td>\n","      <td>29.856985</td>\n","      <td>0.475273</td>\n","      <td>0.062171</td>\n","      <td>0.147810</td>\n","      <td>0.703036</td>\n","      <td>0.611795</td>\n","      <td>...</td>\n","      <td>0.954960</td>\n","      <td>0.093914</td>\n","      <td>2.837082</td>\n","      <td>3.752037</td>\n","      <td>5.810417</td>\n","      <td>0.252730</td>\n","      <td>0.456997</td>\n","      <td>8.584055</td>\n","      <td>4.920953</td>\n","      <td>5.698311</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.500004</td>\n","      <td>0.495960</td>\n","      <td>0.499342</td>\n","      <td>0.155336</td>\n","      <td>7.113954</td>\n","      <td>0.499392</td>\n","      <td>0.241468</td>\n","      <td>0.354914</td>\n","      <td>0.456924</td>\n","      <td>0.487345</td>\n","      <td>...</td>\n","      <td>0.207394</td>\n","      <td>0.291712</td>\n","      <td>1.113565</td>\n","      <td>8.155627</td>\n","      <td>10.062261</td>\n","      <td>0.434581</td>\n","      <td>0.498151</td>\n","      <td>2.852153</td>\n","      <td>1.029081</td>\n","      <td>2.175196</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>12.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>25.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.500000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>9.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>33.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>6.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>11.000000</td>\n","      <td>6.000000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>98.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>5.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>13.000000</td>\n","      <td>6.000000</td>\n","      <td>8.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a4244e3-b86e-437c-ac2d-dabd22d000d6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a4244e3-b86e-437c-ac2d-dabd22d000d6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a4244e3-b86e-437c-ac2d-dabd22d000d6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6776e1ae-ecc4-4410-8f72-ad6465da83cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6776e1ae-ecc4-4410-8f72-ad6465da83cf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6776e1ae-ecc4-4410-8f72-ad6465da83cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.datasets import load_diabetes\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, classification_report, confusion_matrix, roc_curve, auc"],"metadata":{"id":"J8WAFvlpTNLS","executionInfo":{"status":"ok","timestamp":1719921367012,"user_tz":-330,"elapsed":551,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["Xs = df.drop(columns='Diabetes_binary') #independent variable array\n","ys = df['Diabetes_binary']"],"metadata":{"id":"M77uVaXjTV9-","executionInfo":{"status":"ok","timestamp":1719921382377,"user_tz":-330,"elapsed":499,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(\n","    Xs, ys, test_size=0.2, random_state=42)"],"metadata":{"id":"x_j0u3lqTZiI","executionInfo":{"status":"ok","timestamp":1719921398058,"user_tz":-330,"elapsed":596,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)"],"metadata":{"id":"lPPnZOhbTfGG","executionInfo":{"status":"ok","timestamp":1719921425848,"user_tz":-330,"elapsed":510,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["model = LogisticRegression()\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"imo_nH1dTkKz","executionInfo":{"status":"ok","timestamp":1719921440969,"user_tz":-330,"elapsed":480,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"395dcc65-9b34-444e-d398-2164f8f2ae3f"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","accuracy = accuracy_score(y_test, y_pred)\n","print(\"Accuracy: {:.2f}%\".format(accuracy * 100))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JpomHjuETnwh","executionInfo":{"status":"ok","timestamp":1719921461958,"user_tz":-330,"elapsed":561,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"52513845-4ac3-4bcc-dd61-a374f4a9e6d3"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 74.85%\n"]}]},{"cell_type":"code","source":["print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BcnAJ1EQTsx0","executionInfo":{"status":"ok","timestamp":1719921478058,"user_tz":-330,"elapsed":490,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"0bf50b02-596e-4e1e-ae8e-816e46826168"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix:\n"," [[5156 1934]\n"," [1622 5427]]\n"]}]},{"cell_type":"code","source":["print(\"\\nClassification Report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZlJR3fE7TxFh","executionInfo":{"status":"ok","timestamp":1719921525090,"user_tz":-330,"elapsed":801,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"9d271d4d-a51d-4311-c05c-f69519455686"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","         0.0       0.76      0.73      0.74      7090\n","         1.0       0.74      0.77      0.75      7049\n","\n","    accuracy                           0.75     14139\n","   macro avg       0.75      0.75      0.75     14139\n","weighted avg       0.75      0.75      0.75     14139\n","\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score\n",""],"metadata":{"id":"1K7u3lfnT8h0","executionInfo":{"status":"ok","timestamp":1719921547038,"user_tz":-330,"elapsed":425,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestRegressor\n","regressor = RandomForestRegressor()\n","\n","rf = RandomForestClassifier()\n","rf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"GqV_lEZtUBwH","executionInfo":{"status":"ok","timestamp":1719921569416,"user_tz":-330,"elapsed":7357,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"0f0b4958-1752-47ef-8c1b-15eb37283a4a"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["y_rpred = rf.predict(X_test)\n","\n","\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xUcJZT1CUHVN","executionInfo":{"status":"ok","timestamp":1719921596688,"user_tz":-330,"elapsed":1179,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"df0482f5-bc44-4dcf-e67d-ae4596412043"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 1., 0., ..., 0., 0., 1.])"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tp5bYwyCUOB0","executionInfo":{"status":"ok","timestamp":1719921613281,"user_tz":-330,"elapsed":479,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"d8fdd631-392d-40a9-fe75-174ab559fb26"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["44967    1.0\n","20220    0.0\n","23944    0.0\n","2707     0.0\n","42356    1.0\n","        ... \n","59313    1.0\n","44805    1.0\n","30661    0.0\n","30295    0.0\n","30199    0.0\n","Name: Diabetes_binary, Length: 14139, dtype: float64"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["    name='Random Forest'\n","    accuracy = accuracy_score(y_test, y_rpred)\n","    precision = precision_score(y_test, y_rpred)\n","    recall = recall_score(y_test, y_rpred)\n","    f1 = f1_score(y_test, y_rpred)\n","    roc_auc = roc_auc_score(y_test, y_rpred)\n","\n","    # Print results\n","    print(f'Classifier: {name}')\n","    print(f'Accuracy: {accuracy:.4f}')\n","    print(f'Precision: {precision:.4f}')\n","    print(f'Recall: {recall:.4f}')\n","    print(f'F1 Score: {f1:.4f}')\n","    print(f'ROC AUC Score: {roc_auc:.4f}')\n","    print('\\n')\n","\n","    name='Logistic Regressor'\n","    accuracy = accuracy_score(y_test, y_pred)\n","    precision = precision_score(y_test, y_pred)\n","    recall = recall_score(y_test, y_pred)\n","    f1 = f1_score(y_test, y_pred)\n","    roc_auc = roc_auc_score(y_test, y_pred)\n","# Print results\n","    print(f'Classifier: {name}')\n","    print(f'Accuracy: {accuracy:.4f}')\n","    print(f'Precision: {precision:.4f}')\n","    print(f'Recall: {recall:.4f}')\n","    print(f'F1 Score: {f1:.4f}')\n","    print(f'ROC AUC Score: {roc_auc:.4f}')\n","    print('\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0SnHE6qkVIn0","executionInfo":{"status":"ok","timestamp":1719922013255,"user_tz":-330,"elapsed":475,"user":{"displayName":"shruti Bhanushali","userId":"10367828896219823533"}},"outputId":"fd733ddf-2e0f-4f56-b532-9192b2a10283"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Classifier: Random Forest\n","Accuracy: 0.7381\n","Precision: 0.7190\n","Recall: 0.7791\n","F1 Score: 0.7479\n","ROC AUC Score: 0.7382\n","\n","\n","Classifier: Logistic Regressor\n","Accuracy: 0.7485\n","Precision: 0.7373\n","Recall: 0.7699\n","F1 Score: 0.7532\n","ROC AUC Score: 0.7486\n","\n","\n"]}]}]}